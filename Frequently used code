## read a file
  import pandas as pd
  
  # csv: set index and skip header
  df = pd.read_csv('file.csv', index_col=0, skiprows=1)
  
  # excel: skip header and footer
  from pandas import ExcelWriter
  from pandas import ExcelFile
  df = pd.read_excel('file.xls', sheet_name='sheet x',skiprows=1,skipfooter=1)
  
  # txt
  df = pd.read_csv('file.txt', sep="/", names=['xyz'])
  
  # json
  df = open("file.json","r")

## data type
  # time
  date.dt.year/month/quarter  #get different part in a specific date
  df['Date'].map(lambda x: x.year)
  
## slicing
  # iloc
  df.iloc[index] # return a row 
  df.iloc[index1:index2] #return a range of row
  df.iloc[:,index] #return a column
  df.iloc[:,index1:index2] #return a range of column
  
  # loc
  # similar to iloc, but put column/row names instead of index
  
  # filter
  df_filtered = df[df['column' == x]] #get the row that satisfy certain column requirements 
  
## dealing with missing data
  df.fillna(0)
  df.fillna(method ='pad')  #fill with the previous one
  df.fillna(method ='bfill') #fill with the later one
  data["x"].fillna("y", inplace = True) #replace all the null value in column x with value y
  
## data visualization
  # set axis property
  ax.axis([xmin,xmax,ymin,ymax])
  
  # get current axes
  ax = plt.gca()
  
  # set names
  plt.xlabel('xlabel')
  plt.ylabel('ylabel')
  plt.title('title')
  plt.legend(['a','b','c'])
  
  # rotate the tick labels for the x axis
  x = plt.gca().xaxis
  for item in x.get_ticklabels():
      item.set_rotation(45)
   
  
